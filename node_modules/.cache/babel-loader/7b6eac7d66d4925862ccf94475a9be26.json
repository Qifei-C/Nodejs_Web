{"ast":null,"code":"var _jsxFileName = \"/Users/qifei/qifei-port/src/components/MailchimpForm.js\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"./Newsletter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MailchimpSubscribe, {\n      url: postUrl,\n      render: _ref => {\n        let {\n          subscribe,\n          status,\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Newsletter, {\n          status: status,\n          message: message,\n          onValidated: formData => subscribe(formData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = MailchimpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailchimpForm\");","map":{"version":3,"names":["MailchimpSubscribe","Newsletter","MailchimpForm","postUrl","process","env","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","subscribe","status","message","formData"],"sources":["/Users/qifei/qifei-port/src/components/MailchimpForm.js"],"sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"./Newsletter\";\n\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n\n  return (\n    <>\n      <MailchimpSubscribe\n        url={postUrl}\n        render={({ subscribe, status, message }) => (\n          <Newsletter\n            status={status}\n            message={message}\n            onValidated={formData => subscribe(formData)}\n            />\n        )}\n        />\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAMC,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,MAAKF,OAAO,CAACC,GAAR,CAAYE,qBAAsB,OAAMH,OAAO,CAACC,GAAR,CAAYG,sBAAuB,EAAvI;EAEA,oBACE;IAAA,uBACE,QAAC,kBAAD;MACE,GAAG,EAAEL,OADP;MAEE,MAAM,EAAE;QAAA,IAAC;UAAEM,SAAF;UAAaC,MAAb;UAAqBC;QAArB,CAAD;QAAA,oBACN,QAAC,UAAD;UACE,MAAM,EAAED,MADV;UAEE,OAAO,EAAEC,OAFX;UAGE,WAAW,EAAEC,QAAQ,IAAIH,SAAS,CAACG,QAAD;QAHpC;UAAA;UAAA;UAAA;QAAA,QADM;MAAA;IAFV;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAcD,CAjBM;KAAMV,a"},"metadata":{},"sourceType":"module"}