{"ast":null,"code":"import _objectSpread from \"/Users/qifei/qifei-port/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/qifei/qifei-port/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/qifei/qifei-port/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"as\", \"bsPrefix\", \"className\", \"onClick\"];\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect,\n      alwaysOpen = _useContext.alwaysOpen;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(function (k) {\n            return k !== eventKey;\n          });\n        } else {\n          eventKeyPassed = [].concat(_toConsumableArray(activeEventKey), [eventKey]);\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), {}, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  }));\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"names":["React","useContext","classNames","AccordionContext","isAccordionItemSelected","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","activeEventKey","onSelect","alwaysOpen","e","eventKeyPassed","Array","isArray","includes","filter","k","AccordionButton","forwardRef","ref","as","Component","bsPrefix","className","props","accordionOnClick","type","displayName"],"sources":["/Users/qifei/qifei-port/node_modules/react-bootstrap/esm/AccordionButton.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,IAA2BC,uBAA3B,QAA0D,oBAA1D;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;EACpD,kBAIIV,UAAU,CAACE,gBAAD,CAJd;EAAA,IACES,cADF,eACEA,cADF;EAAA,IAEEC,QAFF,eAEEA,QAFF;EAAA,IAGEC,UAHF,eAGEA,UAHF;;EAKA,OAAO,UAAAC,CAAC,EAAI;IACV;AACJ;AACA;AACA;IACI,IAAIC,cAAc,GAAGN,QAAQ,KAAKE,cAAb,GAA8B,IAA9B,GAAqCF,QAA1D;;IAEA,IAAII,UAAJ,EAAgB;MACd,IAAIG,KAAK,CAACC,OAAN,CAAcN,cAAd,CAAJ,EAAmC;QACjC,IAAIA,cAAc,CAACO,QAAf,CAAwBT,QAAxB,CAAJ,EAAuC;UACrCM,cAAc,GAAGJ,cAAc,CAACQ,MAAf,CAAsB,UAAAC,CAAC;YAAA,OAAIA,CAAC,KAAKX,QAAV;UAAA,CAAvB,CAAjB;QACD,CAFD,MAEO;UACLM,cAAc,gCAAOJ,cAAP,IAAuBF,QAAvB,EAAd;QACD;MACF,CAND,MAMO;QACL;QACAM,cAAc,GAAG,CAACN,QAAD,CAAjB;MACD;IACF;;IAEDG,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACG,cAAD,EAAiBD,CAAjB,CAApC;IACAJ,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACI,CAAD,CAAlC;EACD,CAtBD;AAuBD;AACD,IAAMO,eAAe,GAAG,aAAatB,KAAK,CAACuB,UAAN,CAAiB,gBAOnDC,GAPmD,EAO3C;EAAA,mBALTC,EAKS;EAAA,IALLC,SAKK,wBALO,QAKP;EAAA,IAJTC,QAIS,QAJTA,QAIS;EAAA,IAHTC,SAGS,QAHTA,SAGS;EAAA,IAFTjB,OAES,QAFTA,OAES;EAAA,IADNkB,KACM;;EACTF,QAAQ,GAAGrB,kBAAkB,CAACqB,QAAD,EAAW,kBAAX,CAA7B;;EACA,mBAEI1B,UAAU,CAACI,oBAAD,CAFd;EAAA,IACEK,QADF,gBACEA,QADF;;EAGA,IAAMoB,gBAAgB,GAAGrB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAA3C;;EACA,mBAEIV,UAAU,CAACE,gBAAD,CAFd;EAAA,IACES,cADF,gBACEA,cADF;;EAIA,IAAIc,SAAS,KAAK,QAAlB,EAA4B;IAC1BG,KAAK,CAACE,IAAN,GAAa,QAAb;EACD;;EAED,OAAO,aAAavB,IAAI,CAACkB,SAAD;IACtBF,GAAG,EAAEA,GADiB;IAEtBb,OAAO,EAAEmB;EAFa,GAGnBD,KAHmB;IAItB,iBAAiBnB,QAAQ,KAAKE,cAJR;IAKtBgB,SAAS,EAAE1B,UAAU,CAAC0B,SAAD,EAAYD,QAAZ,EAAsB,CAACvB,uBAAuB,CAACQ,cAAD,EAAiBF,QAAjB,CAAxB,IAAsD,WAA5E;EALC,GAAxB;AAOD,CA5BoC,CAArC;AA6BAY,eAAe,CAACU,WAAhB,GAA8B,iBAA9B;AACA,eAAeV,eAAf"},"metadata":{},"sourceType":"module"}