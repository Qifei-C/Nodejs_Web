{"ast":null,"code":"import _objectSpread from \"/Users/qifei/qifei-port/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/qifei/qifei-port/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"bsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n}; // TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\n\n\nexport default function createWithBsPrefix(prefix) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      Component = _ref.Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component || 'div' : _ref2$as,\n        props = _objectWithoutProperties(_ref2, _excluded);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, _objectSpread({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":{"version":3,"names":["classNames","camelize","React","useBootstrapPrefix","jsx","_jsx","pascalCase","str","toUpperCase","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","forwardRef","ref","className","bsPrefix","as","Tag","props","resolvedPrefix"],"sources":["/Users/qifei/qifei-port/node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG;EAAA,OAAIA,GAAG,CAAC,CAAD,CAAH,CAAOC,WAAP,KAAuBP,QAAQ,CAACM,GAAD,CAAR,CAAcE,KAAd,CAAoB,CAApB,CAA3B;AAAA,CAAtB,C,CAEA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAIP;EAAA,+EAAJ,EAAI;EAAA,4BAHNC,WAGM;EAAA,IAHNA,WAGM,iCAHQN,UAAU,CAACK,MAAD,CAGlB;EAAA,IAFNE,SAEM,QAFNA,SAEM;EAAA,IADNC,YACM,QADNA,YACM;;EACN,IAAMC,WAAW,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,iBAK/CC,GAL+C,EAKvC;IAAA,IAJTC,SAIS,SAJTA,SAIS;IAAA,IAHTC,QAGS,SAHTA,QAGS;IAAA,qBAFTC,EAES;IAAA,IAFLC,GAEK,yBAFCR,SAAS,IAAI,KAEd;IAAA,IADNS,KACM;;IACT,IAAMC,cAAc,GAAGpB,kBAAkB,CAACgB,QAAD,EAAWR,MAAX,CAAzC;IACA,OAAO,aAAaN,IAAI,CAACgB,GAAD;MACtBJ,GAAG,EAAEA,GADiB;MAEtBC,SAAS,EAAElB,UAAU,CAACkB,SAAD,EAAYK,cAAZ;IAFC,GAGnBD,KAHmB,EAAxB;EAKD,CAZgC,CAAjC;EAaAP,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;EACAC,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;EACA,OAAOG,WAAP;AACD"},"metadata":{},"sourceType":"module"}