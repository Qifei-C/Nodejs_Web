{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","map":{"version":3,"names":["classNames","React","useContext","useMemo","Feedback","FormCheckInput","FormCheckLabel","FormContext","useBootstrapPrefix","hasChildOfType","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FormCheck","forwardRef","id","bsPrefix","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","className","style","title","type","label","children","as","props","ref","controlId","innerFormContext","hasLabel","input","Provider","value","tooltip","displayName","Object","assign","Input","Label"],"sources":["/Users/qifei/qifei-port/node_modules/react-bootstrap/esm/FormCheck.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}