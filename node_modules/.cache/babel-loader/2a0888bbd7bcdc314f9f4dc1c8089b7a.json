{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["classNames","React","useContext","useDropdownToggle","DropdownContext","useMergedRefs","Button","InputGroupContext","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","bsPrefix","split","className","childBsPrefix","as","Component","props","ref","prefix","dropdownContext","isInputGroup","undefined","toggleProps","show","displayName"],"sources":["/Users/qifei/qifei-port/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,aAAaX,KAAK,CAACY,UAAU,CAAC,CAAC;EACpDC,QAAQ;EACRC,KAAK;EACLC,SAAS;EACTC,aAAa;EACb;EACAC,EAAE,EAAEC,SAAS,GAAGb,MAAM;EACtB,GAAGc;AACL,CAAC,EAAEC,GAAG,KAAK;EACT,MAAMC,MAAM,GAAGd,kBAAkB,CAACM,QAAQ,EAAE,iBAAiB,CAAC;EAC9D,MAAMS,eAAe,GAAGrB,UAAU,CAACE,eAAe,CAAC;EACnD,MAAMoB,YAAY,GAAGtB,UAAU,CAACK,iBAAiB,CAAC;EAElD,IAAIU,aAAa,KAAKQ,SAAS,EAAE;IAC/BL,KAAK,CAACN,QAAQ,GAAGG,aAAa;EAChC;EAEA,MAAM,CAACS,WAAW,CAAC,GAAGvB,iBAAiB,CAAC,CAAC;EACzCuB,WAAW,CAACL,GAAG,GAAGhB,aAAa,CAACqB,WAAW,CAACL,GAAG,EAAEZ,wBAAwB,CAACY,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACnG;;EAEA,OAAO,aAAaV,IAAI,CAACQ,SAAS,EAAE;IAClCH,SAAS,EAAEhB,UAAU,CAACgB,SAAS,EAAEM,MAAM,EAAEP,KAAK,IAAK,GAAEO,MAAO,QAAO,EAAE,CAAC,CAACE,YAAY,KAAKD,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACI,IAAI,CAAC,IAAI,MAAM,CAAC;IAC3J,GAAGD,WAAW;IACd,GAAGN;EACL,CAAC,CAAC;AACJ,CAAC,CAAC;AACFR,cAAc,CAACgB,WAAW,GAAG,gBAAgB;AAC7C,eAAehB,cAAc"},"metadata":{},"sourceType":"module"}